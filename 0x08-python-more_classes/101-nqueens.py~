#!/usr/bin/python3
"""Module containing is_safe function
"""
import sys


def is_safe(board, row, col):
    """
    Create board if safe
    :param board: Board
    :param row: row in board
    :param col: column in board
    :return: True or False
    """
    for i in range(row):
        if board[i] == col:
            return False

    i = row - 1
    j = col - 1
    while i >= 0 and j >= 0:
        if board[i] == j:
            return False
        i -= 1
        j -= 1
    i = row - 1
    j = col + 1
    while i >= 0 and j < len(board):
        if board[i] == j:
            return False
        i -= 1
        j += 1

    return True

def solve_nqueens(n):
    """
    Solve Queen number
    :param n: number
    :return: nothing
    """
    board = [-1] * n

    def backtrack(row):
        if row == n:
            print([[i, board[i]] for i in range(n)])
            return

        for col in range(n):
            if is_safe(board, row, col):
                board[row] = col
                backtrack(row + 1)
                board[row] = -1

    backtrack(0)

if __name__ == '__main__':
    if len(sys.argv) != 2:
        print("Usage: nqueens N")
        sys.exit(1)

    try:
        n = int(sys.argv[1])
    except ValueError:
        print("N must be a number")
        sys.exit(1)

    if n < 4:
        print("N must be at least 4")
        sys.exit(1)

    solve_nqueens(n)
