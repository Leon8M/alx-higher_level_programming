"""
This test case tests add_integer function from the  module.
"""
>>> import importlib
>>> import sys
>>> sys.path.append("..")
>>> module_name = "4-print_square"
>>> module = importlib.import_module(module_name)
>>> print_square = getattr(module, "print_square")
>>> print_square(4)
####
####
####
####
>>> print_square(10)
##########
##########
##########
##########
##########
##########
##########
##########
##########
##########
>>> print_square(0)
>>> print_square(1)
#
>>> print_square(-1)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/root/alx-higher_level_programming/0x07-python-test_driven_development/4-print_square.py", line 19, in print_square
    raise ValueError("size must be >= 0")
ValueError: size must be >= 0
>>> print_square(-1.5)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/root/alx-higher_level_programming/0x07-python-test_driven_development/4-print_square.py", line 17, in print_square
    raise TypeError("size must be an integer")
TypeError: size must be an integer
>>> print_square(1.5)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/root/alx-higher_level_programming/0x07-python-test_driven_development/4-print_square.py", line 17, in print_square
    raise TypeError("size must be an integer")
TypeError: size must be an integer
